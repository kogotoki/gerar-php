{"name":"Gerar-PHP","tagline":"Gerar-PHP: Configuration Management","body":"# PHP configuration management\r\n\r\n... because I'm too lazy to remember Puppet or Chef syntax.\r\n\r\nThis is **an experiment** in configuration management. Open `example.php` if you will.\r\n\r\nCurrently only **Ubuntu** is implemented. Probably going to implement CentOS later.\r\n\r\n# Prerequisites\r\n\r\n    apt-get update && apt-get install -y php5-cli git curl\r\n    git clone https://github.com/slava-vishnyakov/gerar-php.git gerar\r\n    curl -sS https://getcomposer.org/installer | php\r\n    mv composer.phar /usr/local/bin/composer\r\n    cd gerar\r\n    composer dump\r\n    ./gerar --set-hostname vagrant.local\r\n    ./gerar example.php\r\n\r\n## Example:\r\n\r\n    <?php\r\n\r\n    namespace Gerar;\r\n\r\n    Hostname::change('vagrant.local');\r\n\r\n### Run stuff on specific hosts\r\n\r\n    Hostname::run('vagrant.local', function() {\r\n        Console::log('Hello!');\r\n    });\r\n\r\n    Hostname::run('vagrant.local', function() {\r\n        Ubuntu::fixLocales();\r\n        Ubuntu::update();\r\n\r\n### Package and service management\r\n\r\n        Package::named(\"php5-cli mysql-server git imagemagick\")\r\n            ->shouldBeInstalled();\r\n\r\n        Service::named('apache2')\r\n            ->shouldBeInstalled()\r\n            ->shouldBeRunning()\r\n            ->shouldBeRunningAtReboots();\r\n\r\n### One-time tasks\r\n\r\n        DoOnce::run('initializeServer', function() {\r\n            Console::log(\"We have an ignition!\");\r\n        });\r\n\r\n### HTTP requests\r\n\r\n        File::named('/var/www/index.html')->write(\"Bender is great!\");\r\n\r\n        Http::request('http://localhost/')\r\n            ->onSuccess(function($request, $response) {\r\n                Console::log('My new code is \"' . $response->getBody() . '\"');\r\n            })\r\n            ->run();\r\n\r\n### Port monitoring\r\n\r\n        Port::number(810)\r\n            ->ifNotResponding(function() {\r\n                Console::log(\"Oops, port 810 is not responding, maybe we should start apache? Hint: won't help\");\r\n                Service::named('apache2')->start();\r\n\r\n            });\r\n\r\n### File management\r\n\r\n        File::named('test.txt')->write(microtime(true));\r\n\r\n        File::named('test.txt')\r\n            ->whenChanges(function() {\r\n                Console::log('Hello, World appears!');\r\n            })\r\n            ->write('Hello, world!')\r\n            ->replaceIfPresent('world', 'Gerar')\r\n            ->replaceIfPresent(new Regexp('/He..o/'), 'Howdy');\r\n\r\n### User management\r\n\r\n        User::named('root')\r\n            ->shouldHaveSshKey()\r\n            ->mailPublicKeyOnce('user@super-server.com');\r\n\r\n        User::named('alex')\r\n            ->shouldBePresent()\r\n            ->haveSshKeyFrom('files/alex.ssh')\r\n            ->shouldBeInGroup('sudo')\r\n            ->shouldHaveNoPasswordSudoFor('/usr/sbin/service')\r\n            ->shouldHaveSudoFor('/bin/vi');\r\n\r\n### IPs\r\n\r\n        Console::log(\"My external IP is \" . ThisServer::mainExternalIp());\r\n\r\n### /etc/hosts\r\n\r\n        EtcHosts::file()\r\n            ->shouldResolve('rarestblog.com', '127.0.0.1')\r\n            ->shouldNotResolve('rarestblog.com');\r\n\r\n### SSH server\r\n\r\n        Ssh::server()->securify();\r\n\r\nWhat it does:\r\n\r\n        User::shouldHaveOneSudoUserWithSshKey();\r\n        Ssh::server()\r\n            ->shouldNotAllowRoot();\r\n            ->shouldNotAllowPlainTextPasswords();\r\n\r\n## Does not work yet\r\n\r\n### Git projects\r\n\r\n        Git::src('git@github:')\r\n            ->shouldBeAt('/home/git')\r\n            ->shouldBeOnBranch('origin/production');\r\n\r\n### Cron\r\n\r\n        Cron::named('artisan-cleanup')\r\n            ->ofUser('root')->shouldRun()->daily()->run('php artisan cleanup');\r\n\r\n### RVM\r\n\r\n        Rvm::version('1.9')\r\n            ->shouldBeInstalledFor('root');\r\n\r\n### Nginx, Apache, serving rails and PHP\r\n\r\n        Nginx::server()\r\n            ->shouldBeInstalled()\r\n            ->shouldProxy('http://rarestblog.com/update-328719', 'http://localhost:8000/')\r\n            ->shouldProxy('http://rarestblog.com/', 'http://localhost:9000/')\r\n            ->shouldServePhpFpm('rarestblog.com', '/home/user/php/myApp/public')\r\n            ->shouldServePhpFpm('rarestblog.com', '/home/user/php/myApp/public/index.php');\r\n\r\n        NginxPassenger::server()\r\n            ->shouldBeInstalled()\r\n            ->shouldServeRailsApp('/home/user/rails/my_app/public');\r\n\r\n        Apache::server()\r\n            ->shouldServePhp('rarestblog.com', '/home/user/php/myApp/public');\r\n\r\n### Git webhooks and simple apps\r\n\r\n        WebApp('127.0.0.1', 8000)\r\n            ->url('/update-182739')->shouldRun('cd /home/user && php update.php');\r\n\r\n### Testing\r\n\r\n        SshHost('backup')\r\n            ->shouldBeAccessibleForUser('user');\r\n\r\n### Mysql\r\n\r\n        $password = RandomPassword::named('rarestblog-db-password');\r\n\r\n        MySQL::server()\r\n            ->shouldHaveDatabase('rarestblog')\r\n            ->shouldHaveUser('rarestblog', '127.0.0.1', $password)\r\n            ->userShouldHaveFullAccessTo('rarestblog', '127.0.0.1', 'rarestblog.*');\r\n\r\n        File::named('/var/www/database.php')\r\n            ->fromTemplate('files/database.php', array('password', $password));\r\n\r\n### Firewall\r\n\r\n        Firewall::rules()\r\n            ->shouldAllowToPort(22, '234.234.234.234')\r\n            ->shouldNotAllowAnyoneElseToPort(22);\r\n\r\n    });\r\n\r\n    Gerar()->shouldUpdateItselfEvery(15, 'minutes');\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}